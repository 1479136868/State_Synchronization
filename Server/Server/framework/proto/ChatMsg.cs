// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ChatMsg.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using scg = global::System.Collections.Generic;
namespace MyGame {

  #region Enums
  /// <summary>
  ///聊天类型
  /// </summary>
  public enum ChatType {
    PublicChat = 0,
    PrivateChat = 1,
  }

  #endregion

  #region Messages
  /// <summary>
  /////客户端----》服务器  
  ////服务器进行转发。   聊天消息
  /// </summary>
  public sealed class ChatMsg : pb::IMessage {
    private static readonly pb::MessageParser<ChatMsg> _parser = new pb::MessageParser<ChatMsg>(() => new ChatMsg());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatMsg> Parser { get { return _parser; } }

    /// <summary>Field number for the "fromName" field.</summary>
    public const int FromNameFieldNumber = 1;
    private string fromName_ = "";
    /// <summary>
    ///发送者的名字。
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FromName {
      get { return fromName_; }
      set {
        fromName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fromID" field.</summary>
    public const int FromIDFieldNumber = 2;
    private int fromID_;
    /// <summary>
    ///发送者的Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FromID {
      get { return fromID_; }
      set {
        fromID_ = value;
      }
    }

    /// <summary>Field number for the "toName" field.</summary>
    public const int ToNameFieldNumber = 3;
    private string toName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ToName {
      get { return toName_; }
      set {
        toName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "toID" field.</summary>
    public const int ToIDFieldNumber = 4;
    private int toID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ToID {
      get { return toID_; }
      set {
        toID_ = value;
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 5;
    private string msg_ = "";
    /// <summary>
    ///聊天的话
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "chatType" field.</summary>
    public const int ChatTypeFieldNumber = 6;
    private global::MyGame.ChatType chatType_ = 0;
    /// <summary>
    ///聊天的类型。	 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MyGame.ChatType ChatType {
      get { return chatType_; }
      set {
        chatType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FromName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FromName);
      }
      if (FromID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(FromID);
      }
      if (ToName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ToName);
      }
      if (ToID != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ToID);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Msg);
      }
      if (ChatType != 0) {
        output.WriteRawTag(48);
        output.WriteEnum((int) ChatType);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FromName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FromName);
      }
      if (FromID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FromID);
      }
      if (ToName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ToName);
      }
      if (ToID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ToID);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (ChatType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ChatType);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            FromName = input.ReadString();
            break;
          }
          case 16: {
            FromID = input.ReadInt32();
            break;
          }
          case 26: {
            ToName = input.ReadString();
            break;
          }
          case 32: {
            ToID = input.ReadInt32();
            break;
          }
          case 42: {
            Msg = input.ReadString();
            break;
          }
          case 48: {
            chatType_ = (global::MyGame.ChatType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //////==================================
  ////客户端---》服务器-发送的消息。请求在线的人员名单
  /// </summary>
  public sealed class RequestOnlineRoleListMsg : pb::IMessage {
    private static readonly pb::MessageParser<RequestOnlineRoleListMsg> _parser = new pb::MessageParser<RequestOnlineRoleListMsg>(() => new RequestOnlineRoleListMsg());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestOnlineRoleListMsg> Parser { get { return _parser; } }

    /// <summary>Field number for the "userid" field.</summary>
    public const int UseridFieldNumber = 1;
    private int userid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Userid {
      get { return userid_; }
      set {
        userid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Userid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Userid);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Userid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Userid);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Userid = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ////服务器----》客户端发送的消息。在线的人员名单数据
  /// </summary>
  public sealed class OnlineRoleListMsg : pb::IMessage {
    private static readonly pb::MessageParser<OnlineRoleListMsg> _parser = new pb::MessageParser<OnlineRoleListMsg>(() => new OnlineRoleListMsg());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OnlineRoleListMsg> Parser { get { return _parser; } }

    /// <summary>Field number for the "roleList" field.</summary>
    public const int RoleListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::MyGame.RoleMsg> _repeated_roleList_codec
        = pb::FieldCodec.ForMessage(10, global::MyGame.RoleMsg.Parser);
    private readonly pbc::RepeatedField<global::MyGame.RoleMsg> roleList_ = new pbc::RepeatedField<global::MyGame.RoleMsg>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::MyGame.RoleMsg> RoleList {
      get { return roleList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      roleList_.WriteTo(output, _repeated_roleList_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += roleList_.CalculateSize(_repeated_roleList_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            roleList_.AddEntriesFrom(input, _repeated_roleList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ////代表一个已经登录用户的信息
  /// </summary>
  public sealed class RoleMsg : pb::IMessage {
    private static readonly pb::MessageParser<RoleMsg> _parser = new pb::MessageParser<RoleMsg>(() => new RoleMsg());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoleMsg> Parser { get { return _parser; } }

    /// <summary>Field number for the "userid" field.</summary>
    public const int UseridFieldNumber = 1;
    private int userid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Userid {
      get { return userid_; }
      set {
        userid_ = value;
      }
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 2;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lv" field.</summary>
    public const int LvFieldNumber = 3;
    private int lv_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Lv {
      get { return lv_; }
      set {
        lv_ = value;
      }
    }

    /// <summary>Field number for the "exp" field.</summary>
    public const int ExpFieldNumber = 4;
    private int exp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Exp {
      get { return exp_; }
      set {
        exp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Userid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Userid);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (Lv != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Lv);
      }
      if (Exp != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Exp);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Userid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Userid);
      }
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Lv != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Lv);
      }
      if (Exp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Exp);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Userid = input.ReadInt32();
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
          case 24: {
            Lv = input.ReadInt32();
            break;
          }
          case 32: {
            Exp = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
